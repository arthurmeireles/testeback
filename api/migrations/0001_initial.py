# Generated by Django 3.1.4 on 2020-12-17 23:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(blank=True, max_length=1000)),
                ('tipo_usuario', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Coordenador'), (2, 'Profissional'), (3, 'Paciente')])),
                ('cpf', models.CharField(blank=True, max_length=11)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Estabelecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnes', models.CharField(max_length=12, unique=True, verbose_name='CÃ³digo CNES')),
                ('nome', models.CharField(max_length=60)),
                ('logradouro', models.CharField(blank=True, max_length=60, null=True, verbose_name='Logradouro')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('telefone', models.CharField(blank=True, max_length=40, null=True, verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=40, null=True, verbose_name='Celular')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('complemento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=60, null=True, verbose_name='Bairro')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UF', models.IntegerField()),
                ('Nome_UF', models.CharField(blank=True, max_length=1000)),
                ('Codigo_Municipio', models.CharField(max_length=100)),
                ('Nome_Municipio', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Vacina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='vacina_estabelecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField()),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.estabelecimento')),
                ('vacina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vacina')),
            ],
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.estabelecimento')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profissional_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paciente_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='log_entrada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_entrada', models.IntegerField()),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.estabelecimento')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profissional')),
                ('vacina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vacina')),
            ],
        ),
        migrations.AddField(
            model_name='estabelecimento',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.municipio'),
        ),
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coordenador_usuario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CarteiraVacinacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paciente_carteira', to='api.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Aplicacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_aplicacao', models.DateField()),
                ('carteiraVacinacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.carteiravacinacao')),
                ('estabelecimento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.estabelecimento')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profissional')),
                ('vacina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacina_carteira', to='api.vacina')),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('hora', models.TimeField()),
                ('aberto', models.BooleanField(default=True)),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.estabelecimento')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.paciente')),
            ],
        ),
    ]
